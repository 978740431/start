package com.star.other;

import com.alibaba.excel.EasyExcel;
import com.alibaba.excel.ExcelWriter;
import com.alibaba.excel.annotation.ExcelIgnore;
import com.alibaba.excel.annotation.ExcelProperty;
import com.alibaba.excel.write.metadata.WriteSheet;
import com.google.gson.Gson;
import lombok.Data;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

public class HuiduBTC {

    public static void main(String[] args) {
        // 写法1
        String fileName = TestFileUtil.getPath() + "simpleWrite" + System.currentTimeMillis() + ".xlsx";
        // 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭
        // 如果这里想使用03 则 传入excelType参数即可
        EasyExcel.write(fileName, DemoData.class).sheet("模板").doWrite(data());

        // 写法2
        fileName = TestFileUtil.getPath() + "simpleWrite" + System.currentTimeMillis() + ".xlsx";
        // 这里 需要指定写用哪个class去写
        ExcelWriter excelWriter = null;
        try {
            excelWriter = EasyExcel.write(fileName, DemoData.class).build();
            WriteSheet writeSheet = EasyExcel.writerSheet("模板").build();
            excelWriter.write(data(), writeSheet);
        } finally {
            // 千万别忘记finish 会帮忙关闭流
            if (excelWriter != null) {
                excelWriter.finish();
            }
        }
    }

    private static List<DemoData> data() {

        String json = "{\"priceList\":[9793,9783.5,9894.5,9259,9459.5,9476.5,9327,9426,9522.5,9452.5,9374,9297,9358.5,9286.5,9692,9624,9286.5,9240.5,9148.5,8997.5,9114.5,9187.5,9132.5,9234,9084.5,9055,9142,9078,9347.5,9251.5,9442.5,9236,9290.5,9232,9305,9230.5,9256.5,9188,9131,9154,9173,9218.5,9160.5,9393.5,9538,9612,9549.5,9712,9940,11063.5,10941.5,11109,11127.5,11361,11827.5,11072,11243.5,11188,11765.5,11768.5,11600.5,11773.5,11691,11570.5,11808.5,11776.5,11864,11925.5,12308.5,11956.5,11761,11869,11529,11675,11657,11757,11318.5,11466.5,11332,11528.5,11482.5,11718.5,11657.5,11936.5,11399,10144,10455.5,10148.5,10251,10380,10380,10126.5,10222.5,10343,10395.5,10441,10328,10671.5,10776.5,10950,10942,10928,11080,10913,10411,10523,10739.5,10688.5,10729.5,10774.5,10688.5,10839.5,10778.5,10606.5,10564,10544.5,10672,10788.5,10591,10668.5,10927,11056.5,11297,11371,11544,11424.5,11417,11510,11325,11335,11452,11816,11931,12755,12942,12937.5,13124,12959,12993.5,13616,13217,13439,13560,13877,13812.5,13497.5,14002.92,14493.09,15565.21,15619.54,14764.13,15438.5,15242.06,15313.7,15709.32,16273.69,16329,16075,15969.84,16704.51,17674.5,17731.79,17950,18597.47,18750.18,18458.38,18443.97,18952.52,18924.8,17069.16,17021.18,17670.01,18159,19427.84,18764.96,19120.32,19446.35,18802.09,19126.94,19331.92,19079.12,18705.03,18455,18337.49,18078.26,18788.99,19178.47,19160,19432.13,21131.9,22700.7,22963.49,23867.39,23534.89,23096.34,23402,23266.95,23470.04,24718.01,26490.81,26436.47,26780.7,27594.86,29001.44,29064.73,29286.17,32022.67,33272.9,30943.14,33630.56,36855.33,39226.66,39604.83,40282.07,38509.32,33974.66,34581.16,37263,38738.4,36257.93,36232.55,35995.29,36282.45,36584.47,34886.01,31536.67,33312.32,32080.62,32385.39,32654.9,32131.39,30871.77,33070.16,34594],\"opList\":[365088,365191,365882,365889,365889,365889,366152,367136,368751,368839,371072,371072,371072,375546,376008,386852,386828,386808,386808,386808,386743,386723,386703,386683,386659,386659,386659,386594,386574,386554,386534,386509,386509,386509,386449,386425,386492,386474,386564,386564,386564,387150,387238,387745,388594,389685,389685,389685,390061,391181,391972,392384,393600,393600,393600,393949,394542,395412,399578,399578,401385,401385,401385,409131,415427,415427,415427,415559,415901,416013,416317,417403,417403,417403,417403,417859,422313,422308,422508,422508,422500,425500,426400,429600,429800,429900,429900,429900,429900,429900,431000,431500,432500,432600,432600,432600,432600,432600,432600,432600,432700,432800,432800,432800,432800,439600,449900,449900,449900,449800,449800,449800,449800,449800,449700,449700,449700,449700,449600,449600,449600,449600,449600,449600,449600,449500,449400,456500,465200,465200,465200,465300,465400,465500,466600,467300,467300,467300,467500,471900,473100,473900,479100,479100,479100,481000,481712,482537,490345,491313,491313,491313,496064.450826,497765.333466,497765.333466,499204.605804,506428.129182,506428.129182,506428.129182,509581.069947,513392.857768,515165.618488,516214.87246,526764.52098,526764.52098,526764.52098,527966.58485,529840.19748,532425.4208,532425.4208,534115.759412,534115.759412,534115.759412,535929.07683,536856.89421,539355.525426,546544.159952,547082.839571,547082.839571,547082.839571,550719.647037,551235.71476,552510.553272,553517.105806,561132.752012,561132.752012,561132.752012,565026.709633,565633.3854,569261.13459,570855.443805,572644.0208,572644.0208,572644.0208,576649.858368,588968.45338,597671.606124,607274.334234,607274.334234,607274.334234,607274.334234,607140.163848,607108.218518,607069.884122,607037.938792,607037.938792,607037.938792,607037.938792,606903.768406,606871.823076,606871.823076,606807.932416,606775.987086,606775.987086,606775.987086,606673.76203,606641.8167,608814.209435,611426.052861,616557.88173,616557.88173,616557.88173,632801.433088,632761.432576,641523.792624,642611.654041,646155.452406,646155.452406,646155.452406,647149.986914,647287.990907,648177.647616,648191.964013,648467.709058],\"dateList\":[1591660800000,1591747200000,1591833600000,1591920000000,1592006400000,1592092800000,1592179200000,1592265600000,1592352000000,1592438400000,1592524800000,1592611200000,1592697600000,1592784000000,1592870400000,1592956800000,1593043200000,1593129600000,1593216000000,1593302400000,1593388800000,1593475200000,1593561600000,1593648000000,1593734400000,1593820800000,1593907200000,1593993600000,1594080000000,1594166400000,1594252800000,1594339200000,1594425600000,1594512000000,1594598400000,1594684800000,1594771200000,1594857600000,1594944000000,1595030400000,1595116800000,1595203200000,1595289600000,1595376000000,1595462400000,1595548800000,1595635200000,1595721600000,1595808000000,1595894400000,1595980800000,1596067200000,1596153600000,1596240000000,1596326400000,1596412800000,1596499200000,1596585600000,1596672000000,1596758400000,1596844800000,1596931200000,1597017600000,1597276800000,1597363200000,1597449600000,1597536000000,1597622400000,1597708800000,1597795200000,1597881600000,1597968000000,1598054400000,1598140800000,1598227200000,1598313600000,1598400000000,1598486400000,1598572800000,1598659200000,1598745600000,1598832000000,1598918400000,1599004800000,1599091200000,1599177600000,1599264000000,1599350400000,1599436800000,1599523200000,1599523200000,1599609600000,1599696000000,1599782400000,1599868800000,1599955200000,1600041600000,1600128000000,1600214400000,1600300800000,1600387200000,1600473600000,1600560000000,1600646400000,1600732800000,1600819200000,1600992000000,1601078400000,1601164800000,1601251200000,1601337600000,1601424000000,1601510400000,1601596800000,1601683200000,1601769600000,1601856000000,1601942400000,1602028800000,1602115200000,1602201600000,1602288000000,1602374400000,1602460800000,1602547200000,1602633600000,1602720000000,1602806400000,1602892800000,1602950400000,1603036800000,1603123200000,1603209600000,1603296000000,1603382400000,1603468800000,1603555200000,1603641600000,1603728000000,1603814400000,1603900800000,1603987200000,1604073600000,1604160000000,1604246400000,1604332800000,1604449200000,1604570640000,1604622000000,1604708400000,1604794800000,1604881200000,1604967600000,1605050880000,1605138600000,1605225000000,1605311400000,1605397800000,1605484200000,1605570600000,1605657000000,1605737760000,1605823260000,1605909660000,1606002600000,1606089000000,1606168860000,1606255200000,1606341000000,1606434600000,1606514100000,1606607400000,1606693800000,1606773000000,1606867140000,1606945800000,1607032800000,1607118600000,1607212200000,1607298600000,1607377800000,1607464200000,1607550600000,1607637000000,1607723400000,1607817000000,1607903400000,1607982600000,1608069000000,1608155400000,1608241800000,1608328200000,1608421800000,1608508200000,1608587400000,1608673800000,1608760200000,1608846600000,1608940200000,1609026600000,1609113000000,1609192200000,1609291500000,1609365000000,1609451400000,1609545000000,1609631400000,1609717800000,1609797000000,1609883400000,1609977000000,1610063400000,1610142600000,1610236200000,1610322600000,1610401800000,1610488200000,1610574600000,1610661300000,1610747400000,1610841000000,1610927400000,1611006600000,1611093000000,1611179400000,1611265800000,1611352200000,1611445800000,1611532200000,1611611400000,1611697800000,1611784200000,1611870600000,1611957000000]}";

        JsonRootBean jsonRootBean = new Gson().fromJson(json, JsonRootBean.class);

        List<Double> priceList = jsonRootBean.getPriceList();
        List<Double> opList = jsonRootBean.getOpList();
        List<Long> dateList = jsonRootBean.getDateList();

        List<DemoData> list = new ArrayList<DemoData>();

        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");

        for (int i = 0; i < dateList.size(); i++) {
            DemoData data = new DemoData();
            Calendar rightNow = Calendar.getInstance();
            rightNow.setTime(new Date(dateList.get(i)));
            rightNow.add(Calendar.MONTH, 6);
            Date dt1 = rightNow.getTime();
            data.setDate(simpleDateFormat.format(dt1));
            if (i == 0) {
                data.setBtcAddCount(opList.get(i));
            } else if (i == opList.size()-1) {
                data.setBtcAddCount(0.0);
            } else {
                data.setBtcAddCount(opList.get(i + 1) - opList.get(i));
            }
            data.setBtcPrice(priceList.get(i));
            data.setAddTotalCount(opList.get(i));
            list.add(data);
        }


        return list;
    }
}
